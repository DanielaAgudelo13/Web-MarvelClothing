{"mappings":"ysBAAA,IAAAA,EAAAC,EAAA,mCAOAC,eAAeC,EAAWC,GAP1BC,MAOkCA,EAPlCC,SAOyCA,IACrC,IACI,MATRC,KASgBA,SAAeP,EAAAQ,+BACnBJ,EACAC,EACAC,GAEJ,OAAOC,EACT,MAAOE,GACU,uBAAXA,EAAEC,MACFC,MAAM,kDAGK,8BAAXF,EAAEC,MACFC,MAAM,uCAKlBT,eAAeU,EAAMR,EAAMC,EAAOC,GAC9B,IACI,MA5BRC,KA4BgBA,SAAeP,EAAAa,2BACnBT,EACAC,EACAC,GAGJK,MAAM,uBAAuBJ,EAAKF,SAgB1CH,eAA6BY,GACzB,MAAMC,EAASC,EAAAC,IAAIC,EAAAC,GAAI,QAASL,GAChC,IACI,MAAMM,QAAgBJ,EAAAK,OAAON,GAEvBO,EADOF,EAAQG,OACAD,QAGjBE,OAAOC,SAASC,KADhBJ,EACuB,sBAEA,aAE7B,MAAOb,GACLkB,QAAQC,IAAInB,IA3BZoB,CAActB,EAAKuB,KACrB,MAAOrB,GACLE,MAAM,oCAIdT,eAAe6B,EAAkBZ,EAAIa,EAAQC,EAAW,IACpD,UACUjB,EAAAkB,OAAOlB,EAAAC,IAAIE,EAAI,QAASa,GAASC,GACzC,MAAOxB,GACLkB,QAAQC,IAAInB","sources":["js/auth.js"],"sourcesContent":["import {\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport { doc, setDoc, getDoc } from \"firebase/firestore\";\r\nimport { db } from \"./firebaseConfig\";\r\n\r\nasync function createUser(auth, { email, password }) {\r\n    try {\r\n        const { user } = await createUserWithEmailAndPassword(\r\n            auth,\r\n            email,\r\n            password\r\n        );\r\n        return user;\r\n    } catch (e) {\r\n        if (e.code === \"auth/weak-password\") {\r\n            alert(\"Tu contraseña debe tener al menos 6 caracteres\");\r\n        }\r\n\r\n        if (e.code === \"auth/email-already-in-use\") {\r\n            alert(\"Este correo ya se encuentra en uso\");\r\n        }\r\n    }\r\n}\r\n\r\nasync function login(auth, email, password) {\r\n    try {\r\n        const { user } = await signInWithEmailAndPassword(\r\n            auth,\r\n            email,\r\n            password\r\n        );\r\n\r\n        alert(`Bienvenido, usuario ${user.email}`);\r\n\r\n        validateAdmin(user.uid);\r\n    } catch (e) {\r\n        alert(\"Correo o contraseña inválida :(\");\r\n    }\r\n}\r\n\r\nasync function addUserToDatabase(db, userId, userInfo = {}) {\r\n    try {\r\n        await setDoc(doc(db, \"users\", userId), userInfo);\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nasync function validateAdmin(id) {\r\n    const docRef = doc(db, \"users\", id);\r\n    try {\r\n        const docSnap = await getDoc(docRef);\r\n        const data = docSnap.data();\r\n        const isAdmin = data.isAdmin;\r\n\r\n        if (isAdmin) {\r\n            window.location.href = \"/createProduct.html\";\r\n        } else {\r\n            window.location.href = \"/shop.html\";\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport { createUser, login, addUserToDatabase };\r\n"],"names":["$1tHc5","parcelRequire","async","$ef33fadb70b8678b$export$3493b8991d49f558","auth","email","password","user","createUserWithEmailAndPassword","e","code","alert","$ef33fadb70b8678b$export$596d806903d1f59e","signInWithEmailAndPassword","id","docRef","$etBjH","doc","$6Uh31","db","docSnap","getDoc","isAdmin","data","window","location","href","console","log","$ef33fadb70b8678b$var$validateAdmin","uid","$ef33fadb70b8678b$export$9f9c8eae0fddfad1","userId","userInfo","setDoc"],"version":3,"file":"register.ec5ab0f3.js.map"}